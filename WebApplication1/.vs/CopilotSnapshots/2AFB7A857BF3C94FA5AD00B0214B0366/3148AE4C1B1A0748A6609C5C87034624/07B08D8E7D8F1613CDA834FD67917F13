using Microsoft.AspNetCore.Http;
using Microsoft.AspNetCore.Mvc;
using System;
using System.Collections.Generic;
using System.Net.Http;
using System.Net.Http.Headers;
using System.Net.Http.Json;
using System.Threading.Tasks;
using WebApplication1.Models;

namespace WebApplication1.Controllers
{
    public class ProductsController : Controller
    {
        private readonly IHttpClientFactory _httpFactory;

        public ProductsController(IHttpClientFactory httpFactory)
        {
            _httpFactory = httpFactory;
        }

        public async Task<IActionResult> Index()
        {
            // 1) JWT kontrolü
            var token = HttpContext.Session.GetString("JWToken");
            if (string.IsNullOrEmpty(token))
                return RedirectToAction("Index", "Login");

            // 2) HttpClient + Bearer
            var client = _httpFactory.CreateClient();
            client.BaseAddress = new Uri("https://localhost:7209/");
            client.DefaultRequestHeaders.Authorization =
                new AuthenticationHeaderValue("Bearer", token);

            // 3) API çağrısı
            var response = await client.GetAsync("api/ProductApi");
            if (!response.IsSuccessStatusCode)
            {
                if (response.StatusCode == System.Net.HttpStatusCode.Unauthorized)
                {
                    HttpContext.Session.Clear();
                    return RedirectToAction("Index", "Login");
                }

                ViewBag.Message = "Ürünler alınamadı!";
                return View(new List<ProductDto>());
            }

            // 4) DTO’ya deserialize et
            var products = await response.Content.ReadFromJsonAsync<List<ProductDto>>();
            return View(products);
        }
    }
}