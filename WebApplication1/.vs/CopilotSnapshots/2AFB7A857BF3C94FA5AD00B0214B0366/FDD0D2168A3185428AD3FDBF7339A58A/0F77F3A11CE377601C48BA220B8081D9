using Microsoft.AspNetCore.Authorization;
using Microsoft.AspNetCore.Mvc;
using System.Diagnostics;
using WebApplication1.Models;
using Microsoft.AspNetCore.Authentication;
using Microsoft.AspNetCore.Authentication.Cookies;

[Authorize]
public class HomeController : Controller
{
    public async Task<IActionResult> Index()
    {
        var token = HttpContext.Session.GetString("JWToken");
        var sessionId = HttpContext.Session.GetString("SessionId");
        if (string.IsNullOrEmpty(token) || string.IsNullOrEmpty(sessionId))
            return RedirectToAction("Index", "Login");

        // API'ya örnek istek (isteğe bağlı, Home'da API çağrısı yoksa bu kodu eklemeyebilirsin)
        // Eğer API çağrısı varsa aşağıdaki gibi kontrol eklenmeli:
        // var client = ...
        // var response = await client.GetAsync(...);
        // if (response.StatusCode == System.Net.HttpStatusCode.Unauthorized)
        // {
        //     HttpContext.Session.Clear();
        //     await HttpContext.SignOutAsync(CookieAuthenticationDefaults.AuthenticationScheme);
        //     return RedirectToAction("Index", "Login");
        // }

        return View();
    }

    public IActionResult Privacy() => View();

    [ResponseCache(Duration = 0, Location = ResponseCacheLocation.None, NoStore = true)]
    public IActionResult Error()
    {
        return View(new ErrorViewModel
        {
            RequestId = Activity.Current?.Id ?? HttpContext.TraceIdentifier
        });
    }
}